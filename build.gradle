buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.10'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	// Asciidoctor
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.pjs'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly  'com.h2database:h2'
	// Spring REST Docs
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

	implementation 'commons-io:commons-io:2.11.0'    /* Apache commons-io */
	implementation group: 'commons-fileupload', name: 'commons-fileupload', version: '1.4' /* Apache Commons FileUpload */

	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.1'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.1'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.1'

	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.3.6'

	//redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	// querydsl 디펜던시 추가
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
	annotationProcessor(
			"javax.persistence:javax.persistence-api",
			"javax.annotation:javax.annotation-api",
			"com.querydsl:querydsl-apt:${queryDslVersion}:jpa")

}

// 변수 선언
ext {
	snippetsDir = file('build/generated-snippets')
}
//하단에 asciidoctor 세팅으로 이동
//tasks.named('test') {
//	useJUnitPlatform()
//}
// 기존에 만들어진 adoc 삭제
asciidoctor.doFirst {
	delete file('src/main/resources/static/docs')
}

// 생성물이 snippetsDir에 생성됩니다.
test {
	useJUnitPlatform()
	outputs.dir snippetsDir
}

// asciidoctor 설정입니다. dependsOn은 Task가 의존하는 것을 명시합니다.
// 따라서 위에만든 test Task를 의존합니다.
asciidoctor {
	inputs.dir snippetsDir
	dependsOn test
}



// bootjar과 관련된 설정이며, 스니펫을 이용해 문서 작성 후,
// build - docs - asciidoc 하위에 생기는 html 파일을 BOOT-INF/classes/static/docs로 복사해줍니다.
bootJar {
	dependsOn asciidoctor
	copy {
		from "${asciidoctor.outputDir}"
		into 'BOOT-INF/classes/static/docs'
	}
}


// asciidoctor를 의존하고, from file 경로에 있는 파일을 into file로 복사를 진행합니다.
task copyDocument(type: Copy) {
	dependsOn asciidoctor
	from file("build/docs/asciidoc")
	into file("src/main/resources/static/docs")
}


// build시 copyDocument를 의존합니다.
build {
	dependsOn copyDocument
}